<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zycj.tcc.mybatis.mapper.EmployeeOnlineMapper" >
  <resultMap id="BaseResultMap" type="com.zycj.tcc.domain.EmployeeOnline" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="emp_no" property="empNo" jdbcType="VARCHAR" />
    <result column="pos_no" property="posNo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="active_time" property="activeTime" jdbcType="TIMESTAMP" />
    <result column="expired_time" property="expiredTime" jdbcType="TIMESTAMP" />
    <result column="logout_time" property="logoutTime" jdbcType="TIMESTAMP" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, emp_no, pos_no, status, token, login_time, active_time, expired_time, logout_time, 
    login_ip, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zycj.tcc.domain.EmployeeOnlineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_online
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_online
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee_online
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zycj.tcc.domain.EmployeeOnlineExample" >
    delete from employee_online
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zycj.tcc.domain.EmployeeOnline" >
    insert into employee_online (id, emp_no, pos_no, 
      status, token, login_time, 
      active_time, expired_time, logout_time, 
      login_ip, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{empNo,jdbcType=VARCHAR}, #{posNo,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{activeTime,jdbcType=TIMESTAMP}, #{expiredTime,jdbcType=TIMESTAMP}, #{logoutTime,jdbcType=TIMESTAMP}, 
      #{loginIp,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zycj.tcc.domain.EmployeeOnline" >
    insert into employee_online
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="empNo != null" >
        emp_no,
      </if>
      <if test="posNo != null" >
        pos_no,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="activeTime != null" >
        active_time,
      </if>
      <if test="expiredTime != null" >
        expired_time,
      </if>
      <if test="logoutTime != null" >
        logout_time,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="empNo != null" >
        #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="posNo != null" >
        #{posNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activeTime != null" >
        #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredTime != null" >
        #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logoutTime != null" >
        #{logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zycj.tcc.domain.EmployeeOnlineExample" resultType="java.lang.Integer" >
    select count(*) from employee_online
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee_online
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.empNo != null" >
        emp_no = #{record.empNo,jdbcType=VARCHAR},
      </if>
      <if test="record.posNo != null" >
        pos_no = #{record.posNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.token != null" >
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.activeTime != null" >
        active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expiredTime != null" >
        expired_time = #{record.expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logoutTime != null" >
        logout_time = #{record.logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginIp != null" >
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee_online
    set id = #{record.id,jdbcType=INTEGER},
      emp_no = #{record.empNo,jdbcType=VARCHAR},
      pos_no = #{record.posNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      token = #{record.token,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      expired_time = #{record.expiredTime,jdbcType=TIMESTAMP},
      logout_time = #{record.logoutTime,jdbcType=TIMESTAMP},
      login_ip = #{record.loginIp,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zycj.tcc.domain.EmployeeOnline" >
    update employee_online
    <set >
      <if test="empNo != null" >
        emp_no = #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="posNo != null" >
        pos_no = #{posNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activeTime != null" >
        active_time = #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredTime != null" >
        expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logoutTime != null" >
        logout_time = #{logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zycj.tcc.domain.EmployeeOnline" >
    update employee_online
    set emp_no = #{empNo,jdbcType=VARCHAR},
      pos_no = #{posNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      active_time = #{activeTime,jdbcType=TIMESTAMP},
      expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      logout_time = #{logoutTime,jdbcType=TIMESTAMP},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>