<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zycj.tcc.mybatis.mapper.CheckRecordMapper" >
  <resultMap id="BaseResultMap" type="com.zycj.tcc.domain.CheckRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="check_date" property="checkDate" jdbcType="TIMESTAMP" />
    <result column="emp_no" property="empNo" jdbcType="VARCHAR" />
    <result column="to_pay" property="toPay" jdbcType="DECIMAL" />
    <result column="real_pay" property="realPay" jdbcType="DECIMAL" />
    <result column="bank_no" property="bankNo" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="pos_no" property="posNo" jdbcType="VARCHAR" />
    <result column="section_no" property="sectionNo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="req_serial" property="reqSerial" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, serial_no, check_date, emp_no, to_pay, real_pay, bank_no, bank_name, pos_no, 
    section_no, create_time, update_time, req_serial
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zycj.tcc.domain.CheckRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from check_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from check_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from check_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zycj.tcc.domain.CheckRecordExample" >
    delete from check_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zycj.tcc.domain.CheckRecord" >
    insert into check_record (id, serial_no, check_date, 
      emp_no, to_pay, real_pay, 
      bank_no, bank_name, pos_no, 
      section_no, create_time, update_time, 
      req_serial)
    values (#{id,jdbcType=INTEGER}, #{serialNo,jdbcType=VARCHAR}, #{checkDate,jdbcType=TIMESTAMP}, 
      #{empNo,jdbcType=VARCHAR}, #{toPay,jdbcType=DECIMAL}, #{realPay,jdbcType=DECIMAL}, 
      #{bankNo,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{posNo,jdbcType=VARCHAR}, 
      #{sectionNo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{reqSerial,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zycj.tcc.domain.CheckRecord" >
    insert into check_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="serialNo != null" >
        serial_no,
      </if>
      <if test="checkDate != null" >
        check_date,
      </if>
      <if test="empNo != null" >
        emp_no,
      </if>
      <if test="toPay != null" >
        to_pay,
      </if>
      <if test="realPay != null" >
        real_pay,
      </if>
      <if test="bankNo != null" >
        bank_no,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="posNo != null" >
        pos_no,
      </if>
      <if test="sectionNo != null" >
        section_no,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="reqSerial != null" >
        req_serial,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="serialNo != null" >
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null" >
        #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="empNo != null" >
        #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="toPay != null" >
        #{toPay,jdbcType=DECIMAL},
      </if>
      <if test="realPay != null" >
        #{realPay,jdbcType=DECIMAL},
      </if>
      <if test="bankNo != null" >
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="posNo != null" >
        #{posNo,jdbcType=VARCHAR},
      </if>
      <if test="sectionNo != null" >
        #{sectionNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqSerial != null" >
        #{reqSerial,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zycj.tcc.domain.CheckRecordExample" resultType="java.lang.Integer" >
    select count(*) from check_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update check_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.serialNo != null" >
        serial_no = #{record.serialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.checkDate != null" >
        check_date = #{record.checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.empNo != null" >
        emp_no = #{record.empNo,jdbcType=VARCHAR},
      </if>
      <if test="record.toPay != null" >
        to_pay = #{record.toPay,jdbcType=DECIMAL},
      </if>
      <if test="record.realPay != null" >
        real_pay = #{record.realPay,jdbcType=DECIMAL},
      </if>
      <if test="record.bankNo != null" >
        bank_no = #{record.bankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.posNo != null" >
        pos_no = #{record.posNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sectionNo != null" >
        section_no = #{record.sectionNo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reqSerial != null" >
        req_serial = #{record.reqSerial,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update check_record
    set id = #{record.id,jdbcType=INTEGER},
      serial_no = #{record.serialNo,jdbcType=VARCHAR},
      check_date = #{record.checkDate,jdbcType=TIMESTAMP},
      emp_no = #{record.empNo,jdbcType=VARCHAR},
      to_pay = #{record.toPay,jdbcType=DECIMAL},
      real_pay = #{record.realPay,jdbcType=DECIMAL},
      bank_no = #{record.bankNo,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      pos_no = #{record.posNo,jdbcType=VARCHAR},
      section_no = #{record.sectionNo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      req_serial = #{record.reqSerial,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zycj.tcc.domain.CheckRecord" >
    update check_record
    <set >
      <if test="serialNo != null" >
        serial_no = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null" >
        check_date = #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="empNo != null" >
        emp_no = #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="toPay != null" >
        to_pay = #{toPay,jdbcType=DECIMAL},
      </if>
      <if test="realPay != null" >
        real_pay = #{realPay,jdbcType=DECIMAL},
      </if>
      <if test="bankNo != null" >
        bank_no = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="posNo != null" >
        pos_no = #{posNo,jdbcType=VARCHAR},
      </if>
      <if test="sectionNo != null" >
        section_no = #{sectionNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqSerial != null" >
        req_serial = #{reqSerial,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zycj.tcc.domain.CheckRecord" >
    update check_record
    set serial_no = #{serialNo,jdbcType=VARCHAR},
      check_date = #{checkDate,jdbcType=TIMESTAMP},
      emp_no = #{empNo,jdbcType=VARCHAR},
      to_pay = #{toPay,jdbcType=DECIMAL},
      real_pay = #{realPay,jdbcType=DECIMAL},
      bank_no = #{bankNo,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      pos_no = #{posNo,jdbcType=VARCHAR},
      section_no = #{sectionNo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      req_serial = #{reqSerial,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>